name: Checks for build
'on': pull_request
jobs:
  test-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: client
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path-client
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: client/${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: client-${{ runner.os }}-yarn-${{ hashFiles('client/yarn.lock') }}
          restore-keys: |
            client-${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Run tests
        run: yarn test
      # - name: Upload test results
      #   if: always()
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: playwright-report
      #     path: playwright-report

  build-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: client
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path-client
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: client/${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: client-${{ runner.os }}-yarn-${{ hashFiles('client/yarn.lock') }}
          restore-keys: |
            client-${{ runner.os }}-yarn-
      - name: Install modules
        run: yarn install --frozen-lockfile 
      - name: Run ESLint
        run: yarn lint
      - name: Run build
        run: yarn build

  build-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: server
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path-server
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: server/${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: server-${{ runner.os }}-yarn-${{ hashFiles('server/yarn.lock') }}
          restore-keys: |
            server-${{ runner.os }}-yarn-
      - name: Install modules
        run: yarn install --frozen-lockfile 
      - name: Run TSLint
        run: yarn lint
      - name: Run build
        run: yarn build

